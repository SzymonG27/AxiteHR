version: '3.4'

services:
  #MY SERVICES
  sqlserverdb:
    container_name: AxiteHR_Sql
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql/data
      - sqlserver_log:/var/opt/mssql/log
      - sqlserver_secrets:/var/opt/mssql/secrets
    networks:
      - axitehr-network
    user: root
    command: >
      /bin/bash -c "
      chown -R mssql:mssql /var/opt/mssql &&
      /opt/mssql/bin/sqlservr"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P Password123 -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  axitehr.gatewaysol:
    image: ${DOCKER_REGISTRY-}axitehrgatewaysol
    build:
      context: .
      dockerfile: AxiteHR.GatewaySol/Dockerfile
    ports:
      - "5116:5116" # HTTP
      - "7777:7777" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7777;http://+:5116"
    networks:
      - axitehr-network

  axitehr.services.applicationapi:
    image: ${DOCKER_REGISTRY-}axitehrservicesapplicationapi
    build:
      context: .
      dockerfile: AxiteHR.Services.ApplicationAPI/Dockerfile
    ports:
      - "5176:5176" # HTTP
      - "7002:7002" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7002;http://+:5176"
    networks:
      - axitehr-network
    depends_on:
      - sqlserverdb
      - axitehr.gatewaysol

  axitehr.services.authapi:
    image: ${DOCKER_REGISTRY-}axitehrservicesauthapi
    build:
      context: .
      dockerfile: AxiteHR.Services.AuthAPI/Dockerfile
    ports:
      - "5087:5087" # HTTP
      - "7001:7001" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7001;http://+:5087"
      IsDbFromDocker: true
      ConnectionStrings__DefaultConnection: "Server=AxiteHR_Sql;Database=AxiteHR_Identity;User Id=sa;Password=Password123;MultipleActiveResultSets=true;Encrypt=False"
      Kestrel__Endpoints__Https__Url: "https://+:7001"
      Kestrel__Endpoints__Https__Certificate__Path: "Certs/axitehr.services.authapi.pfx"
      Kestrel__Endpoints__Https__Certificate__Password: "Password123"
      MessageBusSettings__ConnectionString: "Endpoint=sb://axitehr-mailing.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=IlHVo5z8JhVBMALz85Iws3I2cEOWrsTSX+ASbOUCg/U="
    networks:
      - axitehr-network
    depends_on:
      - sqlserverdb
      - logstash

  axitehr.services.companyapi:
    image: ${DOCKER_REGISTRY-}axitehrservicescompanyapi
    build:
      context: .
      dockerfile: AxiteHr.Services.CompanyAPI/Dockerfile
    ports:
      - "5020:5020" # HTTP
      - "7004:7004" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7004;http://+:5020"
      IsDbFromDocker: true
      ConnectionStrings__DefaultConnection: "Server=AxiteHR_Sql;Database=AxiteHR_Company;User Id=sa;Password=Password123;MultipleActiveResultSets=true;Encrypt=False"
      Kestrel__Endpoints__Https__Url: "https://+:7004"
      Kestrel__Endpoints__Https__Certificate__Path: "Certs/axitehr.services.companyapi.pfx"
      Kestrel__Endpoints__Https__Certificate__Password: "Password123"
    networks:
      - axitehr-network
    depends_on:
      - sqlserverdb
      - axitehr.gatewaysol
      - logstash

  axitehr.services.documentapi:
    image: ${DOCKER_REGISTRY-}axitehrservicesdocumentapi
    build:
      context: .
      dockerfile: AxiteHR.Services.DocumentAPI/Dockerfile
    ports:
      - "5187:5187" # HTTP
      - "7003:7003" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7003;http://+:5187"
    networks:
      - axitehr-network
    depends_on:
      - sqlserverdb
      - axitehr.gatewaysol

  axitehr.services.emailapi:
    image: ${DOCKER_REGISTRY-}axitehrservicesemailapi
    build:
      context: .
      dockerfile: AxiteHR.Services.EmailAPI/Dockerfile
    ports:
      - "5243:5243" # HTTP
      - "7005:7005" # HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:7005;http://+:5243"
      IsDbFromDocker: true
      ConnectionStrings__DefaultConnection: "Server=AxiteHR_Sql;Database=AxiteHR_Email;User Id=sa;Password=Password123;MultipleActiveResultSets=true;Encrypt=False"
      ConnectionStrings__ServiceBusConnectionString: "Endpoint=sb://axitehr-mailing.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=IlHVo5z8JhVBMALz85Iws3I2cEOWrsTSX+ASbOUCg/U="
      EmailSenderSettings__From: "Frederick Casper"
      EmailSenderSettings__SmtpServer: "smtp.ethereal.email"
      EmailSenderSettings__Port: 587
      EmailSenderSettings__Username: "frederick22@ethereal.email"
      EmailSenderSettings__Password: "1mKePuzGqEmh6zZ12Y"
    networks:
      - axitehr-network
    depends_on:
      - sqlserverdb
      - axitehr.gatewaysol
      - logstash
  #END OF MY SERVICES

  #ELK STACK
  # Elasticsearch
  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - ./elk-config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es_data:/usr/share/elasticsearch/data/
    networks:
      - axitehr-network

  # Logstash
  logstash:
    image: logstash:7.9.1
    container_name: logstash
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "5044:5044"
    volumes:
      - ./elk-config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk-config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ls_data:/usr/share/logstash/data
    depends_on:
      - elasticsearch
    networks:
      - axitehr-network

  # Kibana
  kibana:
    image: kibana:7.9.1
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk-config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kb_data:/usr/share/kibana/data
    depends_on:
      - logstash
    networks:
      - axitehr-network
  #END OF ELK STACK

volumes:
  sqlserver_data:
  sqlserver_log:
  sqlserver_secrets:
  es_data:
  ls_data:
  kb_data:

networks:
  axitehr-network:
    driver: bridge